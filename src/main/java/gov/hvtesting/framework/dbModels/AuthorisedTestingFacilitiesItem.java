package gov.hvtesting.framework.dbModels;

import java.util.Set;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import io.restassured.internal.common.path.ObjectConverter;

@DynamoDBTable(tableName="AuthorisedTestingFacilities")
public class AuthorisedTestingFacilitiesItem {

    private String id;
    private String name;
    private AddressItem address;
    private String phone;
    private String fax;
    private String email;
    private String url;
    private String token;
    private AvailabilityItem availability;
    private GeoLocationItem geoLocation;
    private Set<String> restrictions;
    private Set<String> exclusions;
    private Set<String> inclusions;

    public AuthorisedTestingFacilitiesItem() { }

    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    public String getId() { return id; }
    public void setId(String id) { this.id = id; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    @DynamoDBAttribute(attributeName="name")
    public String getName() {return name; }
    public void setName(String title) { this.name = title; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.M)
    @DynamoDBAttribute(attributeName="address")
    public AddressItem getAddress() {return address; }
    public void setAddress(AddressItem address) { this.address = address; }

    //@DynamoDBTypeConverted(converter = AvailabilityItemConverter.class)
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.M)
    @DynamoDBAttribute(attributeName="availability")
    public AvailabilityItem getAvailability() {return availability;}
    public void setAvailability(AvailabilityItem availability) {this.availability = availability;}

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    @DynamoDBAttribute(attributeName="phone")
    public String getPhone() {return phone;}
    public void setPhone(String phone) { this.phone = phone; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    @DynamoDBAttribute(attributeName="fax")
    public String getFax() { return fax; }
    public void setFax(String fax) { this.fax = fax; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    @DynamoDBAttribute(attributeName="email")
    public String getEmail() {return email;}
    public void setEmail(String email) { this.email = email; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    @DynamoDBAttribute(attributeName="url")
    public String getUrl() { return url; }
    public void setUrl(String url) { this.url = url; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.S)
    @DynamoDBAttribute(attributeName="token")
    public String getToken() { return token; }
    public void setToken(String token) { this.token = token; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.M)
    @DynamoDBAttribute(attributeName="geoLocation")
    public GeoLocationItem getGeoLocation() { return geoLocation; }
    public void setGeoLocation(GeoLocationItem geoLocation) { this.geoLocation = geoLocation; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.M)
    @DynamoDBAttribute(attributeName="restrictions")
    public Set<String> getRestrictions() { return restrictions; }
    public void setRestrictions(Set<String> restrictions) { this.restrictions = restrictions; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.M)
    @DynamoDBAttribute(attributeName="exclusions")
    public Set<String> getExclusions() { return exclusions; }
    public void setExclusions(Set<String> exclusions) { this.exclusions = exclusions; }

    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.M)
    @DynamoDBAttribute(attributeName="inclusions")
    public Set<String> getInclusions() { return inclusions; }
    public void setInclusions(Set<String> inclusions) { this.inclusions = inclusions; }
}
